{"name":"(easy)git","tagline":"Making git easy","body":"### I am starting fresh. I need a copy of the repo.\r\n\r\n`git clone <the path to the repository>`\r\n\r\n### I've made changes to the code on my end and I want to save the state on my machine for later.\r\n\r\n`git commit -m \"your commit message here\"`\r\n\r\nNote: this will only commit files that you have added via `git add <filename>`. This allows you to commit only files that you want. If you want to commit all the tracked files in your working directory each time, use:\r\n\r\n`git commit -am \"your commit message\"`\r\n\r\n### I want to push the changes to the remote server, allowing the other members of my team to see and use them.\r\n\r\n`git pull origin master` (see below for discussion about pull errors)\r\n\r\nthen\r\n\r\n* `git add file1.lisp file2.py` (replace with the files you want to add)\r\n\r\n* `git commit -m \"your message\"`\r\n\r\n* OR\r\n\r\n* `git commit -am \"your message\"` (see above for the difference)\r\n\r\nthen...\r\n\r\n`git push origin master`\r\n\r\n### Help! it says I need to pull first!\r\n\r\nYes, you are correct. It is good practice to do a `git pull origin master` before you start coding for the day, but sometimes we forget, and sometimes someone has pushed something before you. If this happens, run:\r\n\r\n`git pull origin master`\r\n\r\n* #### Ran into an error? Never fear...\r\n\r\n  * **Case 1: I tried to pull changes and it gave me a bunch of merge conflicts! Scary!**\r\n    * Here's what you should do:","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}